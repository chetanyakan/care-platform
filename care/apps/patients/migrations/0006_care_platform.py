# Generated by Django 2.2.11 on 2020-05-24 14:54

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import fernet_fields.fields
import libs.jsonfield
import simple_history.models


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("facility", "0006_auto_20200524_1226"),
        ("accounts", "0004_auto_20200524_1231"),
        ("patients", "0005_patientfamily_portiecallingdetail"),
    ]

    operations = [
        migrations.CreateModel(
            name="ClinicalStatus",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50, unique=True)),
                ("description", models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name="CovidStatus",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50, unique=True)),
                ("description", models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name="PatientGroup",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("active", models.BooleanField(default=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "name",
                    models.CharField(
                        help_text="Name of the patient group", max_length=255
                    ),
                ),
                ("description", models.TextField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={"abstract": False,},
        ),
        migrations.CreateModel(
            name="PatientStatus",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50, unique=True)),
                ("description", models.TextField(blank=True)),
            ],
        ),
        migrations.RenameField(model_name="patient", old_name="age", new_name="month",),
        migrations.RemoveField(model_name="patientfacility", name="patient",),
        migrations.AddField(
            model_name="patient",
            name="clinical_status_updated_at",
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="patient",
            name="current_facility",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="current_facility",
                to="patients.PatientFacility",
            ),
        ),
        migrations.AddField(
            model_name="patient",
            name="home_isolation",
            field=models.BooleanField(
                default=False, verbose_name="does the patient is home isolated"
            ),
        ),
        migrations.AddField(
            model_name="patient",
            name="portea_able_to_connect",
            field=models.BooleanField(
                blank=True, null=True, verbose_name="Is the portea able to connect"
            ),
        ),
        migrations.AddField(
            model_name="patient",
            name="portea_called_at",
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="patient",
            name="year",
            field=models.PositiveIntegerField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name="patient",
            name="aadhar_no",
            field=models.CharField(
                blank=True,
                max_length=255,
                null=True,
                unique=True,
                verbose_name="Aadhar Number of Patient",
            ),
        ),
        migrations.AlterField(
            model_name="patient",
            name="blood_group",
            field=models.CharField(
                choices=[
                    ("A+", "A+"),
                    ("A-", "A-"),
                    ("B+", "B+"),
                    ("B-", "B-"),
                    ("AB+", "AB+"),
                    ("AB-", "AB-"),
                    ("O+", "O+"),
                    ("O-", "O-"),
                ],
                default=1,
                max_length=4,
                verbose_name="Blood Group of Patient",
            ),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name="patient",
            name="nationality",
            field=models.CharField(
                default="indian", max_length=255, verbose_name="Nationality of Patient"
            ),
        ),
        migrations.AlterField(
            model_name="patient",
            name="passport_no",
            field=models.CharField(
                blank=True,
                max_length=255,
                null=True,
                unique=True,
                verbose_name="Passport Number of Foreign Patients",
            ),
        ),
        migrations.CreateModel(
            name="HistoricalPatient",
            fields=[
                (
                    "id",
                    models.IntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                ("active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(blank=True, editable=False)),
                ("updated_at", models.DateTimeField(blank=True, editable=False)),
                (
                    "source",
                    models.IntegerField(
                        choices=[(10, "CARE"), (20, "COVID_TRACKER"), (30, "STAY")],
                        default=10,
                    ),
                ),
                ("icmr_id", models.CharField(blank=True, max_length=15)),
                ("govt_id", models.CharField(blank=True, max_length=15)),
                ("name", fernet_fields.fields.EncryptedCharField(max_length=200)),
                ("month", models.PositiveIntegerField(blank=True, null=True)),
                ("year", models.PositiveIntegerField(blank=True, null=True)),
                (
                    "gender",
                    models.IntegerField(
                        choices=[(1, "Male"), (2, "Female"), (3, "Non-binary")]
                    ),
                ),
                (
                    "phone_number",
                    fernet_fields.fields.EncryptedCharField(
                        max_length=14,
                        validators=[
                            django.core.validators.RegexValidator(
                                code="invalid_mobile",
                                message="Please Enter 10/11 digit mobile number or landline as 0<std code><phone number>",
                                regex="^((\\+91|91|0)[\\- ]{0,1})?[456789]\\d{9}$",
                            )
                        ],
                    ),
                ),
                ("address", fernet_fields.fields.EncryptedTextField(default="")),
                ("date_of_birth", models.DateField(default=None, null=True)),
                ("year_of_birth", models.IntegerField(default=0, null=True)),
                (
                    "nationality",
                    models.CharField(
                        default="indian",
                        max_length=255,
                        verbose_name="Nationality of Patient",
                    ),
                ),
                (
                    "passport_no",
                    models.CharField(
                        blank=True,
                        db_index=True,
                        max_length=255,
                        null=True,
                        verbose_name="Passport Number of Foreign Patients",
                    ),
                ),
                (
                    "aadhar_no",
                    models.CharField(
                        blank=True,
                        db_index=True,
                        max_length=255,
                        null=True,
                        verbose_name="Aadhar Number of Patient",
                    ),
                ),
                (
                    "is_medical_worker",
                    models.BooleanField(
                        default=False, verbose_name="Is the Patient a Medical Worker"
                    ),
                ),
                (
                    "blood_group",
                    models.CharField(
                        choices=[
                            ("A+", "A+"),
                            ("A-", "A-"),
                            ("B+", "B+"),
                            ("B-", "B-"),
                            ("AB+", "AB+"),
                            ("AB-", "AB-"),
                            ("O+", "O+"),
                            ("O-", "O-"),
                        ],
                        max_length=4,
                        verbose_name="Blood Group of Patient",
                    ),
                ),
                (
                    "contact_with_confirmed_carrier",
                    models.BooleanField(
                        default=False,
                        verbose_name="Confirmed Contact with a Covid19 Carrier",
                    ),
                ),
                (
                    "contact_with_suspected_carrier",
                    models.BooleanField(
                        default=False,
                        verbose_name="Suspected Contact with a Covid19 Carrier",
                    ),
                ),
                ("estimated_contact_date", models.DateTimeField(blank=True, null=True)),
                (
                    "past_travel",
                    models.BooleanField(
                        default=False,
                        verbose_name="Travelled to Any Foreign Countries in the last 28 Days",
                    ),
                ),
                (
                    "countries_travelled_old",
                    models.TextField(
                        blank=True,
                        editable=False,
                        null=True,
                        verbose_name="Countries Patient has Travelled to",
                    ),
                ),
                (
                    "home_isolation",
                    models.BooleanField(
                        default=False, verbose_name="does the patient is home isolated"
                    ),
                ),
                (
                    "countries_travelled",
                    libs.jsonfield.JSONField(
                        blank=True,
                        null=True,
                        verbose_name="Countries Patient has Travelled to",
                    ),
                ),
                (
                    "date_of_return",
                    models.DateTimeField(
                        blank=True,
                        null=True,
                        verbose_name="Return Date from the Last Country if Travelled",
                    ),
                ),
                (
                    "present_health",
                    models.TextField(
                        blank=True,
                        default="",
                        verbose_name="Patient's Current Health Details",
                    ),
                ),
                (
                    "ongoing_medication",
                    models.TextField(
                        blank=True,
                        default="",
                        verbose_name="Already pescribed medication if any",
                    ),
                ),
                (
                    "has_SARI",
                    models.BooleanField(
                        default=False, verbose_name="Does the Patient Suffer from SARI"
                    ),
                ),
                (
                    "number_of_aged_dependents",
                    models.IntegerField(
                        blank=True,
                        default=0,
                        verbose_name="Number of people aged above 60 living with the patient",
                    ),
                ),
                (
                    "number_of_chronic_diseased_dependents",
                    models.IntegerField(
                        blank=True,
                        default=0,
                        verbose_name="Number of people who have chronic diseases living with the patient",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Not active when discharged, or removed from the watchlist",
                    ),
                ),
                (
                    "date_of_receipt_of_information",
                    models.DateTimeField(
                        blank=True,
                        null=True,
                        verbose_name="Patient's information received date",
                    ),
                ),
                (
                    "clinical_status_updated_at",
                    models.DateTimeField(blank=True, null=True),
                ),
                ("portea_called_at", models.DateTimeField(blank=True, null=True)),
                (
                    "portea_able_to_connect",
                    models.BooleanField(
                        blank=True,
                        null=True,
                        verbose_name="Is the portea able to connect",
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField()),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "clinicals",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="patients.ClinicalStatus",
                    ),
                ),
                (
                    "cluster_group",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="patients.PatientGroup",
                    ),
                ),
                (
                    "covid_status",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="patients.CovidStatus",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "current_facility",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="patients.PatientFacility",
                    ),
                ),
                (
                    "district",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="accounts.District",
                    ),
                ),
                (
                    "facility",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="facility.Facility",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "local_body",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="accounts.LocalBody",
                    ),
                ),
                (
                    "nearest_facility",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="facility.Facility",
                    ),
                ),
                (
                    "state",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="accounts.State",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical patient",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": "history_date",
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.AddField(
            model_name="patient",
            name="clinicals",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="clinical_status",
                to="patients.ClinicalStatus",
            ),
        ),
        migrations.AddField(
            model_name="patient",
            name="cluster_group",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="patients",
                to="patients.PatientGroup",
            ),
        ),
        migrations.AddField(
            model_name="patient",
            name="covid_status",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="covid_status",
                to="patients.CovidStatus",
            ),
        ),
        migrations.AddField(
            model_name="patientfacility",
            name="patient_status",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="patients.PatientStatus",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="patient",
            unique_together={("aadhar_no", "passport_no", "cluster_group")},
        ),
        migrations.RemoveField(model_name="patient", name="disease_status",),
    ]
